# Generated by Django 4.2.21 on 2025-05-31 08:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('charging_stations', '0005_chargingconnector_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChargingSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.PositiveIntegerField(unique=True)),
                ('payment_transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_method', models.CharField(default='qr_code', max_length=50)),
                ('id_tag', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('started', 'Started'), ('charging', 'Charging'), ('suspended', 'Suspended'), ('stopping', 'Stopping'), ('stopped', 'Stopped'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('authorized', 'Authorized'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('stop_time', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(default=0)),
                ('energy_consumed_kwh', models.DecimalField(decimal_places=3, default=0.0, max_digits=10)),
                ('current_power_kw', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('max_power_kw', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('estimated_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('final_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stop_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('meter_start', models.PositiveIntegerField(default=0)),
                ('meter_stop', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Charging Session',
                'verbose_name_plural': 'Charging Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionMeterValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('measurand', models.CharField(choices=[('energy_active_import_register', 'Energy Active Import Register'), ('energy_reactive_import_register', 'Energy Reactive Import Register'), ('power_active_import', 'Power Active Import'), ('current_import', 'Current Import'), ('voltage', 'Voltage'), ('temperature', 'Temperature')], max_length=50)),
                ('value', models.DecimalField(decimal_places=3, max_digits=15)),
                ('unit', models.CharField(blank=True, max_length=20, null=True)),
                ('context', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('charging_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meter_values', to='ocpp_integration.chargingsession')),
            ],
            options={
                'verbose_name': 'Session Meter Value',
                'verbose_name_plural': 'Session Meter Values',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='OCPPStation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('station_id', models.CharField(max_length=100, unique=True)),
                ('vendor', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('firmware_version', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('unavailable', 'Unavailable'), ('faulted', 'Faulted')], default='available', max_length=20)),
                ('ocpp_websocket_url', models.URLField(blank=True, null=True)),
                ('last_heartbeat', models.DateTimeField(blank=True, null=True)),
                ('is_online', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('charging_station', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ocpp_station', to='charging_stations.chargingstation')),
            ],
            options={
                'verbose_name': 'OCPP Station',
                'verbose_name_plural': 'OCPP Stations',
            },
        ),
        migrations.CreateModel(
            name='OCPPLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error')], default='info', max_length=10)),
                ('message_type', models.CharField(blank=True, choices=[('call', 'Call'), ('call_result', 'Call Result'), ('call_error', 'Call Error')], max_length=20, null=True)),
                ('action', models.CharField(blank=True, max_length=100, null=True)),
                ('message', models.TextField()),
                ('raw_data', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('charging_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='ocpp_integration.chargingsession')),
                ('ocpp_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='ocpp_integration.ocppstation')),
            ],
            options={
                'verbose_name': 'OCPP Log',
                'verbose_name_plural': 'OCPP Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='OCPPConnector',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('connector_id', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('preparing', 'Preparing'), ('charging', 'Charging'), ('suspended_evse', 'Suspended EVSE'), ('suspended_ev', 'Suspended EV'), ('finishing', 'Finishing'), ('reserved', 'Reserved'), ('unavailable', 'Unavailable'), ('faulted', 'Faulted')], default='available', max_length=20)),
                ('error_code', models.CharField(blank=True, max_length=50, null=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('vendor_id', models.CharField(blank=True, max_length=255, null=True)),
                ('vendor_error_code', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('charging_connector', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocpp_connector', to='charging_stations.chargingconnector')),
                ('ocpp_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ocpp_connectors', to='ocpp_integration.ocppstation')),
            ],
            options={
                'verbose_name': 'OCPP Connector',
                'verbose_name_plural': 'OCPP Connectors',
                'unique_together': {('ocpp_station', 'connector_id')},
            },
        ),
        migrations.AddField(
            model_name='chargingsession',
            name='ocpp_connector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charging_sessions', to='ocpp_integration.ocppconnector'),
        ),
        migrations.AddField(
            model_name='chargingsession',
            name='ocpp_station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charging_sessions', to='ocpp_integration.ocppstation'),
        ),
        migrations.AddField(
            model_name='chargingsession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='charging_sessions', to=settings.AUTH_USER_MODEL),
        ),
    ]
